From 1d3ae463ca104d5e6e5604cb61f180e8ac89ecf6 Mon Sep 17 00:00:00 2001
From: Andrei Tatar <andrei@unikraft.io>
Date: Tue, 1 Aug 2023 17:48:40 +0200
Subject: [PATCH] Adapt x86 intrinsics to Unikraft build system

This minimal patch allows libdeflate to work with the way Unikraft's
build system handles compiler intrinsics; specifically:

(1) Remove HAVE_*_NATIVE macros => intrinsics will only be included and
used if HAVE_TARGET_INTRINSICS is set
(2) Condition HAVE_TARGET_INTRINSICS on LIBINTEL_INTRINSICS, to ensure
that the build has *intrin.h files

This way the intrinsics headers will only be included if they are
provided by LIBINTEL_INTRINSICS and individual CPU feature selection is
left to the compiler's 'target' function attributes & runtime dispatch.

Signed-off-by: Andrei Tatar <andrei@unikraft.io>
---
 lib/x86/cpu_features.h | 26 +++-----------------------
 1 file changed, 3 insertions(+), 23 deletions(-)

diff --git a/lib/x86/cpu_features.h b/lib/x86/cpu_features.h
index 3cb3f46..eeb2ba8 100644
--- a/lib/x86/cpu_features.h
+++ b/lib/x86/cpu_features.h
@@ -28,6 +28,8 @@
 #ifndef LIB_X86_CPU_FEATURES_H
 #define LIB_X86_CPU_FEATURES_H
 
+#include <uk/config.h>
+
 #include "../lib_common.h"
 
 #define HAVE_DYNAMIC_X86_CPU_FEATURES	0
@@ -73,7 +75,7 @@ static inline u32 get_x86_cpu_features(void) { return 0; }
  * functions.  Unfortunately clang has no feature test macro for this, so we
  * have to check its version.
  */
-#if HAVE_DYNAMIC_X86_CPU_FEATURES && \
+#if HAVE_DYNAMIC_X86_CPU_FEATURES && CONFIG_LIBINTEL_INTRINSICS && \
 	(GCC_PREREQ(4, 9) || CLANG_PREREQ(3, 8, 7030000) || defined(_MSC_VER))
 #  define HAVE_TARGET_INTRINSICS	1
 #else
@@ -81,21 +83,11 @@ static inline u32 get_x86_cpu_features(void) { return 0; }
 #endif
 
 /* SSE2 */
-#if defined(__SSE2__) || \
-	(defined(_MSC_VER) && \
-	 (defined(ARCH_X86_64) || (defined(_M_IX86_FP) && _M_IX86_FP >= 2)))
-#  define HAVE_SSE2_NATIVE	1
-#else
 #  define HAVE_SSE2_NATIVE	0
-#endif
 #define HAVE_SSE2_INTRIN	(HAVE_SSE2_NATIVE || HAVE_TARGET_INTRINSICS)
 
 /* PCLMUL */
-#if defined(__PCLMUL__) || (defined(_MSC_VER) && defined(__AVX2__))
-#  define HAVE_PCLMUL_NATIVE	1
-#else
 #  define HAVE_PCLMUL_NATIVE	0
-#endif
 #if HAVE_PCLMUL_NATIVE || (HAVE_TARGET_INTRINSICS && \
 			   (GCC_PREREQ(4, 4) || CLANG_PREREQ(3, 2, 0) || \
 			    defined(_MSC_VER)))
@@ -105,11 +97,7 @@ static inline u32 get_x86_cpu_features(void) { return 0; }
 #endif
 
 /* AVX */
-#ifdef __AVX__
-#  define HAVE_AVX_NATIVE	1
-#else
 #  define HAVE_AVX_NATIVE	0
-#endif
 #if HAVE_AVX_NATIVE || (HAVE_TARGET_INTRINSICS && \
 			(GCC_PREREQ(4, 6) || CLANG_PREREQ(3, 0, 0) || \
 			 defined(_MSC_VER)))
@@ -119,11 +107,7 @@ static inline u32 get_x86_cpu_features(void) { return 0; }
 #endif
 
 /* AVX2 */
-#ifdef __AVX2__
-#  define HAVE_AVX2_NATIVE	1
-#else
 #  define HAVE_AVX2_NATIVE	0
-#endif
 #if HAVE_AVX2_NATIVE || (HAVE_TARGET_INTRINSICS && \
 			 (GCC_PREREQ(4, 7) || CLANG_PREREQ(3, 1, 0) || \
 			  defined(_MSC_VER)))
@@ -133,11 +117,7 @@ static inline u32 get_x86_cpu_features(void) { return 0; }
 #endif
 
 /* BMI2 */
-#if defined(__BMI2__) || (defined(_MSC_VER) && defined(__AVX2__))
-#  define HAVE_BMI2_NATIVE	1
-#else
 #  define HAVE_BMI2_NATIVE	0
-#endif
 #if HAVE_BMI2_NATIVE || (HAVE_TARGET_INTRINSICS && \
 			 (GCC_PREREQ(4, 7) || CLANG_PREREQ(3, 1, 0) || \
 			  defined(_MSC_VER)))
-- 
2.41.0

